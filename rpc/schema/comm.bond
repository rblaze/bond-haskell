// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace bond.comm;

enum MessageType
{
    REQUEST = 0;
    RESPONSE = 1;
    EVENT = 2;
}

enum ErrorCode
{
    INTERNAL_SERVER_ERROR = 0xA0BD0000; // Error is an InternalServerError
    METHOD_NOT_FOUND = 0xA0BD0001;
    INVALID_INVOCATION = 0xA0BD0002;
    TRANSPORT_ERROR = 0xA0BD0003;
    CONNECTION_SHUT_DOWN = 0xA0BD0004;
    MULTIPLE_ERRORS_OCCURRED = 0xA0BD0005; // Error is an AggregateError
    TIMEOUT_ERROR = 0xA0BD0006;
}

enum ConnectionShutdownReason
{
    UNKNOWN= 0x0;
    CLIENT_GRACEFUL = 0x1;
    SERVER_GRACEFUL = 0x2;
    CLIENT_PROTOCOL_ERROR = 0x3;
    BOND_INTERNAL_ERROR = 0x4;
    SERVICE_INTERNAL_ERROR = 0x5;
    NETWORK_ERROR = 0x6;
}

struct Error
{
    0: required int32 error_code;
    1: string message;
    2: nullable<bonded<Error>> inner_error;
}

struct InternalServerError : Error
{
    0: string unique_id;
    1: string server_stack_trace;
}

struct AggregateError : Error
{
    0: vector<bonded<Error>> inner_errors;
}

struct ConnectionMetrics
{
    0: string connection_id;
    1: string local_endpoint;
    2: string remote_endpoint;
    3: ConnectionShutdownReason shutdown_reason = UNKNOWN;
    4: double duration_millis;
}

struct RequestMetrics
{
    0: string request_id;
    1: string connection_id;
    2: string service_name;
    3: string method_name;
    4: string local_endpoint;
    5: string remote_endpoint;
    6: nullable<InternalServerError> error;
    7: double total_time_millis;
    8: double service_method_time_millis;
}
